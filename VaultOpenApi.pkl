//===----------------------------------------------------------------------===//
//  Copyright (c) 2025 Javier Cuesta
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//===----------------------------------------------------------------------===//

amends "@openapi/Document.pkl"

import "@openapi/Schema.pkl"
import "@openapi/HTTPResponse.pkl"

import "AuthMethods/TokenAuth.pkl" as TokenAuth
import "AuthMethods/AppRoleAuth.pkl" as AppRoleAuth
import "SystemBackend/Wrapping.pkl"
import "SystemBackend/PoliciesACL.pkl"
import "SystemBackend/Mounts.pkl"
import "SystemBackend/SystemAuth.pkl"
import "SecretEngines/KeyValue/KeyValueEngine.pkl" as KeyValueEngine
import "SecretEngines/Databases/PostgresSQL/PostgresDatabaseConfiguration.pkl" as PostgresDatabaseConfiguration

info {
  title = "Vault Courier"
  description = "API client for Hashicorp Vault and OpenBao"
  version = "0.0.1"
  license {
    name = "Apache License 2.0"
  }
}

servers {
  new { 
    url = "http://127.0.0.1:8200/v1" 
  }
}

paths {

  ...PoliciesACL.paths

  ...Mounts.paths

  ...SystemAuth.paths

  ...Wrapping.paths

  ...TokenAuth.paths

  ...AppRoleAuth.paths

  ...KeyValueEngine.paths

  ...PostgresDatabaseConfiguration.paths
}

components {
  parameters {
    ["VaultTokenHeader"] {
      name = "X-Vault-Token"
      description = "Vault Token required for authentication"
      `in` = "header"
      schema = new Schema {
        type = "string"
      }
    }
    ["WrapTTLHeader"] {
      name = "X-Vault-Wrap-TTL"
      description = "Use the X-Vault-Wrap-TTL header with any Vault API call where you want to wrap the response."
      `in` = "header"
      schema {
        type = "string"
      }
    }
  }
  schemas {
    ...SystemAuth.components.schemas
    
    ...PoliciesACL.components.schemas

    ...Mounts.components.schemas

    ...Wrapping.components.schemas

    ...AppRoleAuth.components.schemas

    ...TokenAuth.components.schemas

    ...PostgresDatabaseConfiguration.components.schemas

    ["VaultErrorsResponse"] {
      type = "object"
      properties {
        ["errors"] {
          type = "array"
          description = "List of errors"
          items = new Schema {
            type = "string"
          }
        }
      }
    }
  }
}
