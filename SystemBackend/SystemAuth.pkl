//===----------------------------------------------------------------------===//
//  Copyright (c) 2025 Javier Cuesta
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//===----------------------------------------------------------------------===//

module SystemAuth

amends "@openapi/Document.pkl"
import "@openapi/PathItem.pkl"
import "@openapi/Reference.pkl"
import "@openapi/Schema.pkl"

paths {
  // https://developer.hashicorp.com/vault/api-docs/system/auth#enable-auth-method
  ["/sys/auth/{path}"] {
    description = "Enable a new credential backend with a name."
    parameters {
      new {
        name = "path"
        description = "The path to mount to. Cannot be delimited. Example: \"user\""
        `in` = "path"
        schema {
          type = "string"
        }
        required = true
      }
      new Reference {
        `$ref` = "#/components/parameters/VaultTokenHeader"
      }
    }
    get {
      summary = "Reads auth method."
      description = "This endpoints returns the configuration of the auth method at the given path. This endpoint requires sudo capability on the final path, but the same functionality can be achieved without sudo via `sys/mounts/auth/[auth-path]`."
      operationId = "auth-read-method"
      tags {
        "system"
      }
      responses {
        ["200"] {
          description = "OK"
          content {
            ["application/json"] {
              schema = new Reference {
                `$ref` = "#/components/schemas/ReadAuthMethodResponse"
              }
            }
          }
        }
        ["400"] {
          description = "BadRequest"
          content {
            ["application/json"] {
              schema = new Reference {
                `$ref` = "#/components/schemas/VaultErrorsResponse"
              }
            }
          }
        }
      }
    }
    post {
      summary = "Enables a new auth method."
      description = "After enabling, the auth method can be accessed and configured via the auth path specified as part of the URL. This auth path will be nested under the auth prefix.\n\nFor example, enable the \"foo\" auth method will make it accessible at `/auth/foo`."
      operationId = "auth-enable-method"
      tags {
        "system"
      }
      requestBody {
        required = true
        content {
          ["application/json"] {
            schema = new Reference {
              `$ref` = "#/components/schemas/AuthEnableMethodRequest"
            }
          }
        }
      }
      responses {
        ["204"] {
          description = "NoContent"
        }
        ["400"] {
          description = "BadRequest"
          content {
            ["application/json"] {
              schema = new Reference {
                `$ref` = "#/components/schemas/VaultErrorsResponse"
              }
            }
          }
        }
      }
    }
    `delete` {
      summary = "Disables the auth method at the given auth path."
      description = "This endpoint disables the auth method at the given auth path. This endpoint requires sudo capability in addition to any path-specific capabilities."
      operationId = "auth-disable-method"
      tags {
        "system"
      }
      responses {
        ["204"] {
          description = "NoContent"
        }
        ["400"] {
          description = "BadRequest"
          content {
            ["application/json"] {
              schema = new Reference {
                `$ref` = "#/components/schemas/VaultErrorsResponse"
              }
            }
          }
        }
      }
    }
  }
}

components {
  schemas {
    ["AuthEnableMethodRequest"] {
      type = "object"
      properties {
        ["config"] {
          type = "object"
          description = "Configuration for this mount, such as plugin_name."
          format = "map"
        }
        ["description"] {
          type = "string"
          description = "User-friendly description for this credential backend."
        }
        ["local"] {
          type = "boolean"
          description = "Mark the mount as a local mount, which is not replicated and is unaffected by replication."
          default = false
        }
        ["options"] {
          type = "object"
          description = "The options to pass into the backend. Should be a json object with string keys and values."
          format = "kvpairs"
        }
        ["seal_wrap"] {
          type = "boolean"
          description = "Whether to turn on seal wrapping for the mount."
          default = false
        }
        ["type"] {
          type = "string"
          description = "The type of the backend. Example: \"userpass\""
        }
      }
    }

    ["ReadAuthMethodResponse"] {
      type = "object"
      properties {
        ["request_id"] {
          type = "string"
          description = "the id of the request associated with this response"
        }
        ["data"] {
          type = "object"
          properties {
            ["accessor"] {
              type = "string"
            }
            ["external_entropy_access"] {
              type = "boolean"
            }
            ["local"] {
              type = "boolean"
            }
            ["config"] {
              type = "object"
              description = "Configuration for this mount, such as plugin_name."
              format = "kvpairs"
            }
            ["options"] {
              type = "object"
              description = "The options to pass into the backend"
              format = "kvpairs"
            }
            ["seal_wrap"] {
              type = "boolean"
              description = "Whether to turn on seal wrapping for the mount."
            }
            ["description"] {
              type = "string"
            }
            ["type"] {
              type = "string"
              description = "The type of the backend. Example: \"userpass\""
            }
          }
          required {
            "type"
            "config"
          }
        }
        ["mount_type"] {
          type = "string"
        }
      }
      required {
        "data"
      }
    }
  }
}